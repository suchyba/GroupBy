name: Create release

on:
  push:
    tags:
      - 'v*'
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  APPLICATION_NAME: GroupBy.Web.API
  SWASHBUCKLE_DOTNET_CORE_VERSION: 7.0.x
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 6.5.0
  API_IMPORT_SPECIFICATION_PATH: /swagger.json
  API_IMPORT_DLL: ${{ env.APPLICATION_NAME }}/publish/${{ env.APPLICATION_NAME }}.dll
  API_IMPORT_VERSION: groupbydoc

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish --no-restore -c Release
    - name: Pack
      run: tar czvf "${{ env.APPLICATION_NAME }}.tar.gz" ${{ env.APPLICATION_NAME }}/bin/Release/net7.0/publish
    - name: Clean build dir
      run: rm -r ${{ env.APPLICATION_NAME }}/bin/Release/net7.0/publish
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APPLICATION_NAME }}
        path: ${{ env.APPLICATION_NAME }}.tar.gz
      
  build-release:
    name: Build release docker image
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./${{ env.APPLICATION_NAME }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  create-api-doc:
    name: Create OpenAPI documentation
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Setup SwashBuckle .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.SWASHBUCKLE_DOTNET_CORE_VERSION }}
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Publish
        run: dotnet publish --no-restore -c Release
      - name: Install Swashbuckle CLI .NET Global Tool
        run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Generate Open API Specification Document
        run: swagger tofile --output "${{ env.API_IMPORT_SPECIFICATION_PATH }}" "${{ env.API_IMPORT_DLL }}" "${{ env.API_IMPORT_VERSION }}"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: OpenAPIDoc
          path: ${{ env.API_IMPORT_SPECIFICATION_PATH }}

  release-project:
    name: Create release
    runs-on: ubuntu-latest
    needs: [build-release, create-api-doc]
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      - name: Genereate changelog
        id: changelog
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          output: CHANGELOG.md
      - name: Upload changelog
        uses: actions/upload-artifact@v3
        with:
          name: Changelog
          path: CHANGELOG.md
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APPLICATION_NAME }}
      - name: Download OpenAPI doc
        uses: actions/download-artifact@v3
        with:
          name: OpenAPIDoc
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            ${{ env.APPLICATION_NAME }}.tar.gz
            CHANGELOG.md
            ${{ env.API_IMPORT_SPECIFICATION_PATH }}